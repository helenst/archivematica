# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mcpserver.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='mcpserver.proto',
  package='mcpserverpb',
  syntax='proto3',
  serialized_pb=_b('\n\x0fmcpserver.proto\x12\x0bmcpserverpb\"$\n\x16\x41pproveTransferRequest\x12\n\n\x02id\x18\x01 \x01(\t\"+\n\x17\x41pproveTransferResponse\x12\x10\n\x08\x61pproved\x18\x01 \x01(\x08\"1\n\x11\x41pproveJobRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x10\n\x08\x63hoiceId\x18\x02 \x01(\t\"&\n\x12\x41pproveJobResponse\x12\x10\n\x08\x61pproved\x18\x01 \x01(\x08\"\x10\n\x0eJobListRequest\"\xe2\x02\n\x0fJobListResponse\x12.\n\x04jobs\x18\x01 \x03(\x0b\x32 .mcpserverpb.JobListResponse.Job\x12\x15\n\rtransferCount\x18\x02 \x01(\x05\x12\x13\n\x0bingestCount\x18\x03 \x01(\x05\x1a\xf2\x01\n\x03Job\x12\n\n\x02id\x18\x01 \x01(\t\x12;\n\x08unitType\x18\x02 \x01(\x0e\x32).mcpserverpb.JobListResponse.Job.UnitType\x12\x38\n\x07\x63hoices\x18\x03 \x03(\x0b\x32\'.mcpserverpb.JobListResponse.Job.Choice\x1a,\n\x06\x43hoice\x12\r\n\x05value\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\":\n\x08UnitType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08TRANSFER\x10\x01\x12\n\n\x06INGEST\x10\x02\x12\x07\n\x03\x44IP\x10\x03\"\x1c\n\x0eLinkGetRequest\x12\n\n\x02id\x18\x01 \x01(\t\"2\n\x0fLinkGetResponse\x12\x1f\n\x04link\x18\x01 \x01(\x0b\x32\x11.mcpserverpb.Link\"\x1d\n\x0f\x43hainGetRequest\x12\n\n\x02id\x18\x01 \x01(\t\"5\n\x10\x43hainGetResponse\x12!\n\x05\x63hain\x18\x01 \x01(\x0b\x32\x12.mcpserverpb.Chain\"O\n\'ListMicroserviceChoiceDuplicatesRequest\x12\x10\n\x08linkName\x18\x01 \x01(\t\x12\x12\n\nchoiceName\x18\x02 \x01(\t\"\xaa\x01\n(ListMicroserviceChoiceDuplicatesResponse\x12S\n\nduplicates\x18\x01 \x03(\x0b\x32?.mcpserverpb.ListMicroserviceChoiceDuplicatesResponse.Duplicate\x1a)\n\tDuplicate\x12\r\n\x05srcId\x18\x01 \x01(\t\x12\r\n\x05\x64stId\x18\x02 \x01(\t\"s\n\x03Job\"l\n\x06Status\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x15\n\x11\x41WAITING_DECISION\x10\x01\x12\x1a\n\x16\x43OMPLETED_SUCCESSFULLY\x10\x02\x12\x16\n\x12\x45XECUTING_COMMANDS\x10\x03\x12\n\n\x06\x46\x41ILED\x10\x04\"Q\n\x08\x45xitCode\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\'\n\x06status\x18\x02 \x01(\x0e\x32\x17.mcpserverpb.Job.Status\x12\x0e\n\x06linkId\x18\x03 \x01(\t\"\xe3\x08\n\nLinkConfig\x12\x38\n\x03stc\x18\x01 \x01(\x0b\x32+.mcpserverpb.LinkConfig.StandardTasksConfig\x12=\n\x04mscc\x18\x02 \x01(\x0b\x32/.mcpserverpb.LinkConfig.MicroServiceChainChoice\x12G\n\x05mscrd\x18\x03 \x01(\x0b\x32\x38.mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic\x12\x46\n\x06tcuvlp\x18\x04 \x01(\x0b\x32\x36.mcpserverpb.LinkConfig.TaskConfigUnitVariableLinkPull\x12@\n\x05tcsuv\x18\x05 \x01(\x0b\x32\x31.mcpserverpb.LinkConfig.TaskConfigSetUnitVariable\x1a\xbd\x01\n\x13StandardTasksConfig\x12\x0f\n\x07\x65xecute\x18\x01 \x01(\t\x12\x11\n\targuments\x18\x02 \x01(\t\x12\x14\n\x0c\x66ilterSubDir\x18\x03 \x01(\t\x12\x17\n\x0f\x66ilterFileStart\x18\x04 \x01(\t\x12\x15\n\rfilterFileEnd\x18\x05 \x01(\t\x12\x14\n\x0crequiresLock\x18\x06 \x01(\x08\x12\x12\n\nstdoutFile\x18\x07 \x01(\t\x12\x12\n\nstderrFile\x18\x08 \x01(\t\x1a\x92\x01\n\x17MicroServiceChainChoice\x12G\n\x07\x63hoices\x18\x01 \x03(\x0b\x32\x36.mcpserverpb.LinkConfig.MicroServiceChainChoice.Choice\x1a.\n\x06\x43hoice\x12\x0f\n\x07\x63hainId\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x1a\xa1\x02\n MicroServiceChoiceReplacementDic\x12L\n\x05\x64icts\x18\x02 \x03(\x0b\x32=.mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict\x1a\xae\x01\n\x04\x44ict\x12\n\n\x02id\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12W\n\x05items\x18\x03 \x03(\x0b\x32H.mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict.ItemsEntry\x1a,\n\nItemsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x42\n\x1eTaskConfigUnitVariableLinkPull\x12\x10\n\x08variable\x18\x01 \x01(\t\x12\x0e\n\x06linkId\x18\x02 \x01(\t\x1aL\n\x19TaskConfigSetUnitVariable\x12\x10\n\x08variable\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\x12\x0e\n\x06linkId\x18\x03 \x01(\t\"\xfd\x03\n\x04Link\x12\n\n\x02id\x18\x01 \x01(\t\x12(\n\x04type\x18\x02 \x01(\x0e\x32\x1a.mcpserverpb.Link.LinkType\x12\'\n\x06\x63onfig\x18\x03 \x01(\x0b\x32\x17.mcpserverpb.LinkConfig\x12\r\n\x05group\x18\x04 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12\x15\n\rdefaultLinkId\x18\x06 \x01(\t\x12.\n\rdefaultStatus\x18\x07 \x01(\x0e\x32\x17.mcpserverpb.Job.Status\x12(\n\texitCodes\x18\x08 \x03(\x0b\x32\x15.mcpserverpb.ExitCode\"\x80\x02\n\x08LinkType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08RUN_ONCE\x10\x01\x12\x15\n\x11RUN_FOR_EACH_FILE\x10\x02\x12\x19\n\x15GET_USER_CHOICE_CHAIN\x10\x03\x12\x18\n\x14GET_USER_CHOICE_DICT\x10\x04\x12\x18\n\x14GENERATE_USER_CHOICE\x10\x05\x12\x1d\n\x19GET_GENERATED_USER_CHOICE\x10\x06\x12\x15\n\x11GET_UNIT_VARIABLE\x10\x07\x12\x15\n\x11SET_UNIT_VARIABLE\x10\x08\x12\x12\n\x0eGET_MAGIC_LINK\x10\t\x12\x12\n\x0eSET_MAGIC_LINK\x10\n\"8\n\x05\x43hain\x12\n\n\x02id\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x0e\n\x06linkId\x18\x03 \x01(\t2\x9f\x04\n\tMCPServer\x12M\n\nApproveJob\x12\x1e.mcpserverpb.ApproveJobRequest\x1a\x1f.mcpserverpb.ApproveJobResponse\x12\\\n\x0f\x41pproveTransfer\x12#.mcpserverpb.ApproveTransferRequest\x1a$.mcpserverpb.ApproveTransferResponse\x12\x44\n\x07JobList\x12\x1b.mcpserverpb.JobListRequest\x1a\x1c.mcpserverpb.JobListResponse\x12\x44\n\x07LinkGet\x12\x1b.mcpserverpb.LinkGetRequest\x1a\x1c.mcpserverpb.LinkGetResponse\x12G\n\x08\x43hainGet\x12\x1c.mcpserverpb.ChainGetRequest\x1a\x1d.mcpserverpb.ChainGetResponse\x12\x8f\x01\n ListMicroserviceChoiceDuplicates\x12\x34.mcpserverpb.ListMicroserviceChoiceDuplicatesRequest\x1a\x35.mcpserverpb.ListMicroserviceChoiceDuplicatesResponseb\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_JOBLISTRESPONSE_JOB_UNITTYPE = _descriptor.EnumDescriptor(
  name='UnitType',
  full_name='mcpserverpb.JobListResponse.Job.UnitType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRANSFER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INGEST', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DIP', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=521,
  serialized_end=579,
)
_sym_db.RegisterEnumDescriptor(_JOBLISTRESPONSE_JOB_UNITTYPE)

_JOB_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='mcpserverpb.Job.Status',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AWAITING_DECISION', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='COMPLETED_SUCCESSFULLY', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXECUTING_COMMANDS', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1010,
  serialized_end=1118,
)
_sym_db.RegisterEnumDescriptor(_JOB_STATUS)

_LINK_LINKTYPE = _descriptor.EnumDescriptor(
  name='LinkType',
  full_name='mcpserverpb.Link.LinkType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUN_ONCE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RUN_FOR_EACH_FILE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_USER_CHOICE_CHAIN', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_USER_CHOICE_DICT', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GENERATE_USER_CHOICE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_GENERATED_USER_CHOICE', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_UNIT_VARIABLE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_UNIT_VARIABLE', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GET_MAGIC_LINK', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SET_MAGIC_LINK', index=10, number=10,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2583,
  serialized_end=2839,
)
_sym_db.RegisterEnumDescriptor(_LINK_LINKTYPE)


_APPROVETRANSFERREQUEST = _descriptor.Descriptor(
  name='ApproveTransferRequest',
  full_name='mcpserverpb.ApproveTransferRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='mcpserverpb.ApproveTransferRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=68,
)


_APPROVETRANSFERRESPONSE = _descriptor.Descriptor(
  name='ApproveTransferResponse',
  full_name='mcpserverpb.ApproveTransferResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='approved', full_name='mcpserverpb.ApproveTransferResponse.approved', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=70,
  serialized_end=113,
)


_APPROVEJOBREQUEST = _descriptor.Descriptor(
  name='ApproveJobRequest',
  full_name='mcpserverpb.ApproveJobRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='mcpserverpb.ApproveJobRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='choiceId', full_name='mcpserverpb.ApproveJobRequest.choiceId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=115,
  serialized_end=164,
)


_APPROVEJOBRESPONSE = _descriptor.Descriptor(
  name='ApproveJobResponse',
  full_name='mcpserverpb.ApproveJobResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='approved', full_name='mcpserverpb.ApproveJobResponse.approved', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=166,
  serialized_end=204,
)


_JOBLISTREQUEST = _descriptor.Descriptor(
  name='JobListRequest',
  full_name='mcpserverpb.JobListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=206,
  serialized_end=222,
)


_JOBLISTRESPONSE_JOB_CHOICE = _descriptor.Descriptor(
  name='Choice',
  full_name='mcpserverpb.JobListResponse.Job.Choice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='mcpserverpb.JobListResponse.Job.Choice.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='mcpserverpb.JobListResponse.Job.Choice.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=475,
  serialized_end=519,
)

_JOBLISTRESPONSE_JOB = _descriptor.Descriptor(
  name='Job',
  full_name='mcpserverpb.JobListResponse.Job',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='mcpserverpb.JobListResponse.Job.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='unitType', full_name='mcpserverpb.JobListResponse.Job.unitType', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='choices', full_name='mcpserverpb.JobListResponse.Job.choices', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_JOBLISTRESPONSE_JOB_CHOICE, ],
  enum_types=[
    _JOBLISTRESPONSE_JOB_UNITTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=337,
  serialized_end=579,
)

_JOBLISTRESPONSE = _descriptor.Descriptor(
  name='JobListResponse',
  full_name='mcpserverpb.JobListResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='jobs', full_name='mcpserverpb.JobListResponse.jobs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transferCount', full_name='mcpserverpb.JobListResponse.transferCount', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ingestCount', full_name='mcpserverpb.JobListResponse.ingestCount', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_JOBLISTRESPONSE_JOB, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=225,
  serialized_end=579,
)


_LINKGETREQUEST = _descriptor.Descriptor(
  name='LinkGetRequest',
  full_name='mcpserverpb.LinkGetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='mcpserverpb.LinkGetRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=581,
  serialized_end=609,
)


_LINKGETRESPONSE = _descriptor.Descriptor(
  name='LinkGetResponse',
  full_name='mcpserverpb.LinkGetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='link', full_name='mcpserverpb.LinkGetResponse.link', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=611,
  serialized_end=661,
)


_CHAINGETREQUEST = _descriptor.Descriptor(
  name='ChainGetRequest',
  full_name='mcpserverpb.ChainGetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='mcpserverpb.ChainGetRequest.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=663,
  serialized_end=692,
)


_CHAINGETRESPONSE = _descriptor.Descriptor(
  name='ChainGetResponse',
  full_name='mcpserverpb.ChainGetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chain', full_name='mcpserverpb.ChainGetResponse.chain', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=694,
  serialized_end=747,
)


_LISTMICROSERVICECHOICEDUPLICATESREQUEST = _descriptor.Descriptor(
  name='ListMicroserviceChoiceDuplicatesRequest',
  full_name='mcpserverpb.ListMicroserviceChoiceDuplicatesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='linkName', full_name='mcpserverpb.ListMicroserviceChoiceDuplicatesRequest.linkName', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='choiceName', full_name='mcpserverpb.ListMicroserviceChoiceDuplicatesRequest.choiceName', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=749,
  serialized_end=828,
)


_LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE = _descriptor.Descriptor(
  name='Duplicate',
  full_name='mcpserverpb.ListMicroserviceChoiceDuplicatesResponse.Duplicate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='srcId', full_name='mcpserverpb.ListMicroserviceChoiceDuplicatesResponse.Duplicate.srcId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dstId', full_name='mcpserverpb.ListMicroserviceChoiceDuplicatesResponse.Duplicate.dstId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=960,
  serialized_end=1001,
)

_LISTMICROSERVICECHOICEDUPLICATESRESPONSE = _descriptor.Descriptor(
  name='ListMicroserviceChoiceDuplicatesResponse',
  full_name='mcpserverpb.ListMicroserviceChoiceDuplicatesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='duplicates', full_name='mcpserverpb.ListMicroserviceChoiceDuplicatesResponse.duplicates', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=831,
  serialized_end=1001,
)


_JOB = _descriptor.Descriptor(
  name='Job',
  full_name='mcpserverpb.Job',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _JOB_STATUS,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1003,
  serialized_end=1118,
)


_EXITCODE = _descriptor.Descriptor(
  name='ExitCode',
  full_name='mcpserverpb.ExitCode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='mcpserverpb.ExitCode.code', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='status', full_name='mcpserverpb.ExitCode.status', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linkId', full_name='mcpserverpb.ExitCode.linkId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1120,
  serialized_end=1201,
)


_LINKCONFIG_STANDARDTASKSCONFIG = _descriptor.Descriptor(
  name='StandardTasksConfig',
  full_name='mcpserverpb.LinkConfig.StandardTasksConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='execute', full_name='mcpserverpb.LinkConfig.StandardTasksConfig.execute', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='arguments', full_name='mcpserverpb.LinkConfig.StandardTasksConfig.arguments', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filterSubDir', full_name='mcpserverpb.LinkConfig.StandardTasksConfig.filterSubDir', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filterFileStart', full_name='mcpserverpb.LinkConfig.StandardTasksConfig.filterFileStart', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='filterFileEnd', full_name='mcpserverpb.LinkConfig.StandardTasksConfig.filterFileEnd', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='requiresLock', full_name='mcpserverpb.LinkConfig.StandardTasksConfig.requiresLock', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stdoutFile', full_name='mcpserverpb.LinkConfig.StandardTasksConfig.stdoutFile', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='stderrFile', full_name='mcpserverpb.LinkConfig.StandardTasksConfig.stderrFile', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1551,
  serialized_end=1740,
)

_LINKCONFIG_MICROSERVICECHAINCHOICE_CHOICE = _descriptor.Descriptor(
  name='Choice',
  full_name='mcpserverpb.LinkConfig.MicroServiceChainChoice.Choice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chainId', full_name='mcpserverpb.LinkConfig.MicroServiceChainChoice.Choice.chainId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='mcpserverpb.LinkConfig.MicroServiceChainChoice.Choice.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1843,
  serialized_end=1889,
)

_LINKCONFIG_MICROSERVICECHAINCHOICE = _descriptor.Descriptor(
  name='MicroServiceChainChoice',
  full_name='mcpserverpb.LinkConfig.MicroServiceChainChoice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='choices', full_name='mcpserverpb.LinkConfig.MicroServiceChainChoice.choices', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINKCONFIG_MICROSERVICECHAINCHOICE_CHOICE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1743,
  serialized_end=1889,
)

_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT_ITEMSENTRY = _descriptor.Descriptor(
  name='ItemsEntry',
  full_name='mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict.ItemsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict.ItemsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict.ItemsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2137,
  serialized_end=2181,
)

_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT = _descriptor.Descriptor(
  name='Dict',
  full_name='mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='items', full_name='mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict.items', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT_ITEMSENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2007,
  serialized_end=2181,
)

_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC = _descriptor.Descriptor(
  name='MicroServiceChoiceReplacementDic',
  full_name='mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dicts', full_name='mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.dicts', index=0,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1892,
  serialized_end=2181,
)

_LINKCONFIG_TASKCONFIGUNITVARIABLELINKPULL = _descriptor.Descriptor(
  name='TaskConfigUnitVariableLinkPull',
  full_name='mcpserverpb.LinkConfig.TaskConfigUnitVariableLinkPull',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variable', full_name='mcpserverpb.LinkConfig.TaskConfigUnitVariableLinkPull.variable', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linkId', full_name='mcpserverpb.LinkConfig.TaskConfigUnitVariableLinkPull.linkId', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2183,
  serialized_end=2249,
)

_LINKCONFIG_TASKCONFIGSETUNITVARIABLE = _descriptor.Descriptor(
  name='TaskConfigSetUnitVariable',
  full_name='mcpserverpb.LinkConfig.TaskConfigSetUnitVariable',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='variable', full_name='mcpserverpb.LinkConfig.TaskConfigSetUnitVariable.variable', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='mcpserverpb.LinkConfig.TaskConfigSetUnitVariable.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linkId', full_name='mcpserverpb.LinkConfig.TaskConfigSetUnitVariable.linkId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2251,
  serialized_end=2327,
)

_LINKCONFIG = _descriptor.Descriptor(
  name='LinkConfig',
  full_name='mcpserverpb.LinkConfig',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='stc', full_name='mcpserverpb.LinkConfig.stc', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mscc', full_name='mcpserverpb.LinkConfig.mscc', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='mscrd', full_name='mcpserverpb.LinkConfig.mscrd', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tcuvlp', full_name='mcpserverpb.LinkConfig.tcuvlp', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tcsuv', full_name='mcpserverpb.LinkConfig.tcsuv', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_LINKCONFIG_STANDARDTASKSCONFIG, _LINKCONFIG_MICROSERVICECHAINCHOICE, _LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC, _LINKCONFIG_TASKCONFIGUNITVARIABLELINKPULL, _LINKCONFIG_TASKCONFIGSETUNITVARIABLE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1204,
  serialized_end=2327,
)


_LINK = _descriptor.Descriptor(
  name='Link',
  full_name='mcpserverpb.Link',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='mcpserverpb.Link.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='mcpserverpb.Link.type', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='config', full_name='mcpserverpb.Link.config', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='group', full_name='mcpserverpb.Link.group', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='mcpserverpb.Link.description', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaultLinkId', full_name='mcpserverpb.Link.defaultLinkId', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='defaultStatus', full_name='mcpserverpb.Link.defaultStatus', index=6,
      number=7, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exitCodes', full_name='mcpserverpb.Link.exitCodes', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LINK_LINKTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2330,
  serialized_end=2839,
)


_CHAIN = _descriptor.Descriptor(
  name='Chain',
  full_name='mcpserverpb.Chain',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='mcpserverpb.Chain.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='mcpserverpb.Chain.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='linkId', full_name='mcpserverpb.Chain.linkId', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2841,
  serialized_end=2897,
)

_JOBLISTRESPONSE_JOB_CHOICE.containing_type = _JOBLISTRESPONSE_JOB
_JOBLISTRESPONSE_JOB.fields_by_name['unitType'].enum_type = _JOBLISTRESPONSE_JOB_UNITTYPE
_JOBLISTRESPONSE_JOB.fields_by_name['choices'].message_type = _JOBLISTRESPONSE_JOB_CHOICE
_JOBLISTRESPONSE_JOB.containing_type = _JOBLISTRESPONSE
_JOBLISTRESPONSE_JOB_UNITTYPE.containing_type = _JOBLISTRESPONSE_JOB
_JOBLISTRESPONSE.fields_by_name['jobs'].message_type = _JOBLISTRESPONSE_JOB
_LINKGETRESPONSE.fields_by_name['link'].message_type = _LINK
_CHAINGETRESPONSE.fields_by_name['chain'].message_type = _CHAIN
_LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE.containing_type = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE
_LISTMICROSERVICECHOICEDUPLICATESRESPONSE.fields_by_name['duplicates'].message_type = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE
_JOB_STATUS.containing_type = _JOB
_EXITCODE.fields_by_name['status'].enum_type = _JOB_STATUS
_LINKCONFIG_STANDARDTASKSCONFIG.containing_type = _LINKCONFIG
_LINKCONFIG_MICROSERVICECHAINCHOICE_CHOICE.containing_type = _LINKCONFIG_MICROSERVICECHAINCHOICE
_LINKCONFIG_MICROSERVICECHAINCHOICE.fields_by_name['choices'].message_type = _LINKCONFIG_MICROSERVICECHAINCHOICE_CHOICE
_LINKCONFIG_MICROSERVICECHAINCHOICE.containing_type = _LINKCONFIG
_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT_ITEMSENTRY.containing_type = _LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT
_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT.fields_by_name['items'].message_type = _LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT_ITEMSENTRY
_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT.containing_type = _LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC
_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC.fields_by_name['dicts'].message_type = _LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT
_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC.containing_type = _LINKCONFIG
_LINKCONFIG_TASKCONFIGUNITVARIABLELINKPULL.containing_type = _LINKCONFIG
_LINKCONFIG_TASKCONFIGSETUNITVARIABLE.containing_type = _LINKCONFIG
_LINKCONFIG.fields_by_name['stc'].message_type = _LINKCONFIG_STANDARDTASKSCONFIG
_LINKCONFIG.fields_by_name['mscc'].message_type = _LINKCONFIG_MICROSERVICECHAINCHOICE
_LINKCONFIG.fields_by_name['mscrd'].message_type = _LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC
_LINKCONFIG.fields_by_name['tcuvlp'].message_type = _LINKCONFIG_TASKCONFIGUNITVARIABLELINKPULL
_LINKCONFIG.fields_by_name['tcsuv'].message_type = _LINKCONFIG_TASKCONFIGSETUNITVARIABLE
_LINK.fields_by_name['type'].enum_type = _LINK_LINKTYPE
_LINK.fields_by_name['config'].message_type = _LINKCONFIG
_LINK.fields_by_name['defaultStatus'].enum_type = _JOB_STATUS
_LINK.fields_by_name['exitCodes'].message_type = _EXITCODE
_LINK_LINKTYPE.containing_type = _LINK
DESCRIPTOR.message_types_by_name['ApproveTransferRequest'] = _APPROVETRANSFERREQUEST
DESCRIPTOR.message_types_by_name['ApproveTransferResponse'] = _APPROVETRANSFERRESPONSE
DESCRIPTOR.message_types_by_name['ApproveJobRequest'] = _APPROVEJOBREQUEST
DESCRIPTOR.message_types_by_name['ApproveJobResponse'] = _APPROVEJOBRESPONSE
DESCRIPTOR.message_types_by_name['JobListRequest'] = _JOBLISTREQUEST
DESCRIPTOR.message_types_by_name['JobListResponse'] = _JOBLISTRESPONSE
DESCRIPTOR.message_types_by_name['LinkGetRequest'] = _LINKGETREQUEST
DESCRIPTOR.message_types_by_name['LinkGetResponse'] = _LINKGETRESPONSE
DESCRIPTOR.message_types_by_name['ChainGetRequest'] = _CHAINGETREQUEST
DESCRIPTOR.message_types_by_name['ChainGetResponse'] = _CHAINGETRESPONSE
DESCRIPTOR.message_types_by_name['ListMicroserviceChoiceDuplicatesRequest'] = _LISTMICROSERVICECHOICEDUPLICATESREQUEST
DESCRIPTOR.message_types_by_name['ListMicroserviceChoiceDuplicatesResponse'] = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE
DESCRIPTOR.message_types_by_name['Job'] = _JOB
DESCRIPTOR.message_types_by_name['ExitCode'] = _EXITCODE
DESCRIPTOR.message_types_by_name['LinkConfig'] = _LINKCONFIG
DESCRIPTOR.message_types_by_name['Link'] = _LINK
DESCRIPTOR.message_types_by_name['Chain'] = _CHAIN

ApproveTransferRequest = _reflection.GeneratedProtocolMessageType('ApproveTransferRequest', (_message.Message,), dict(
  DESCRIPTOR = _APPROVETRANSFERREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.ApproveTransferRequest)
  ))
_sym_db.RegisterMessage(ApproveTransferRequest)

ApproveTransferResponse = _reflection.GeneratedProtocolMessageType('ApproveTransferResponse', (_message.Message,), dict(
  DESCRIPTOR = _APPROVETRANSFERRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.ApproveTransferResponse)
  ))
_sym_db.RegisterMessage(ApproveTransferResponse)

ApproveJobRequest = _reflection.GeneratedProtocolMessageType('ApproveJobRequest', (_message.Message,), dict(
  DESCRIPTOR = _APPROVEJOBREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.ApproveJobRequest)
  ))
_sym_db.RegisterMessage(ApproveJobRequest)

ApproveJobResponse = _reflection.GeneratedProtocolMessageType('ApproveJobResponse', (_message.Message,), dict(
  DESCRIPTOR = _APPROVEJOBRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.ApproveJobResponse)
  ))
_sym_db.RegisterMessage(ApproveJobResponse)

JobListRequest = _reflection.GeneratedProtocolMessageType('JobListRequest', (_message.Message,), dict(
  DESCRIPTOR = _JOBLISTREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.JobListRequest)
  ))
_sym_db.RegisterMessage(JobListRequest)

JobListResponse = _reflection.GeneratedProtocolMessageType('JobListResponse', (_message.Message,), dict(

  Job = _reflection.GeneratedProtocolMessageType('Job', (_message.Message,), dict(

    Choice = _reflection.GeneratedProtocolMessageType('Choice', (_message.Message,), dict(
      DESCRIPTOR = _JOBLISTRESPONSE_JOB_CHOICE,
      __module__ = 'mcpserver_pb2'
      # @@protoc_insertion_point(class_scope:mcpserverpb.JobListResponse.Job.Choice)
      ))
    ,
    DESCRIPTOR = _JOBLISTRESPONSE_JOB,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:mcpserverpb.JobListResponse.Job)
    ))
  ,
  DESCRIPTOR = _JOBLISTRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.JobListResponse)
  ))
_sym_db.RegisterMessage(JobListResponse)
_sym_db.RegisterMessage(JobListResponse.Job)
_sym_db.RegisterMessage(JobListResponse.Job.Choice)

LinkGetRequest = _reflection.GeneratedProtocolMessageType('LinkGetRequest', (_message.Message,), dict(
  DESCRIPTOR = _LINKGETREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.LinkGetRequest)
  ))
_sym_db.RegisterMessage(LinkGetRequest)

LinkGetResponse = _reflection.GeneratedProtocolMessageType('LinkGetResponse', (_message.Message,), dict(
  DESCRIPTOR = _LINKGETRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.LinkGetResponse)
  ))
_sym_db.RegisterMessage(LinkGetResponse)

ChainGetRequest = _reflection.GeneratedProtocolMessageType('ChainGetRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHAINGETREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.ChainGetRequest)
  ))
_sym_db.RegisterMessage(ChainGetRequest)

ChainGetResponse = _reflection.GeneratedProtocolMessageType('ChainGetResponse', (_message.Message,), dict(
  DESCRIPTOR = _CHAINGETRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.ChainGetResponse)
  ))
_sym_db.RegisterMessage(ChainGetResponse)

ListMicroserviceChoiceDuplicatesRequest = _reflection.GeneratedProtocolMessageType('ListMicroserviceChoiceDuplicatesRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTMICROSERVICECHOICEDUPLICATESREQUEST,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.ListMicroserviceChoiceDuplicatesRequest)
  ))
_sym_db.RegisterMessage(ListMicroserviceChoiceDuplicatesRequest)

ListMicroserviceChoiceDuplicatesResponse = _reflection.GeneratedProtocolMessageType('ListMicroserviceChoiceDuplicatesResponse', (_message.Message,), dict(

  Duplicate = _reflection.GeneratedProtocolMessageType('Duplicate', (_message.Message,), dict(
    DESCRIPTOR = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE_DUPLICATE,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:mcpserverpb.ListMicroserviceChoiceDuplicatesResponse.Duplicate)
    ))
  ,
  DESCRIPTOR = _LISTMICROSERVICECHOICEDUPLICATESRESPONSE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.ListMicroserviceChoiceDuplicatesResponse)
  ))
_sym_db.RegisterMessage(ListMicroserviceChoiceDuplicatesResponse)
_sym_db.RegisterMessage(ListMicroserviceChoiceDuplicatesResponse.Duplicate)

Job = _reflection.GeneratedProtocolMessageType('Job', (_message.Message,), dict(
  DESCRIPTOR = _JOB,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.Job)
  ))
_sym_db.RegisterMessage(Job)

ExitCode = _reflection.GeneratedProtocolMessageType('ExitCode', (_message.Message,), dict(
  DESCRIPTOR = _EXITCODE,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.ExitCode)
  ))
_sym_db.RegisterMessage(ExitCode)

LinkConfig = _reflection.GeneratedProtocolMessageType('LinkConfig', (_message.Message,), dict(

  StandardTasksConfig = _reflection.GeneratedProtocolMessageType('StandardTasksConfig', (_message.Message,), dict(
    DESCRIPTOR = _LINKCONFIG_STANDARDTASKSCONFIG,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:mcpserverpb.LinkConfig.StandardTasksConfig)
    ))
  ,

  MicroServiceChainChoice = _reflection.GeneratedProtocolMessageType('MicroServiceChainChoice', (_message.Message,), dict(

    Choice = _reflection.GeneratedProtocolMessageType('Choice', (_message.Message,), dict(
      DESCRIPTOR = _LINKCONFIG_MICROSERVICECHAINCHOICE_CHOICE,
      __module__ = 'mcpserver_pb2'
      # @@protoc_insertion_point(class_scope:mcpserverpb.LinkConfig.MicroServiceChainChoice.Choice)
      ))
    ,
    DESCRIPTOR = _LINKCONFIG_MICROSERVICECHAINCHOICE,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:mcpserverpb.LinkConfig.MicroServiceChainChoice)
    ))
  ,

  MicroServiceChoiceReplacementDic = _reflection.GeneratedProtocolMessageType('MicroServiceChoiceReplacementDic', (_message.Message,), dict(

    Dict = _reflection.GeneratedProtocolMessageType('Dict', (_message.Message,), dict(

      ItemsEntry = _reflection.GeneratedProtocolMessageType('ItemsEntry', (_message.Message,), dict(
        DESCRIPTOR = _LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT_ITEMSENTRY,
        __module__ = 'mcpserver_pb2'
        # @@protoc_insertion_point(class_scope:mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict.ItemsEntry)
        ))
      ,
      DESCRIPTOR = _LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT,
      __module__ = 'mcpserver_pb2'
      # @@protoc_insertion_point(class_scope:mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic.Dict)
      ))
    ,
    DESCRIPTOR = _LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:mcpserverpb.LinkConfig.MicroServiceChoiceReplacementDic)
    ))
  ,

  TaskConfigUnitVariableLinkPull = _reflection.GeneratedProtocolMessageType('TaskConfigUnitVariableLinkPull', (_message.Message,), dict(
    DESCRIPTOR = _LINKCONFIG_TASKCONFIGUNITVARIABLELINKPULL,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:mcpserverpb.LinkConfig.TaskConfigUnitVariableLinkPull)
    ))
  ,

  TaskConfigSetUnitVariable = _reflection.GeneratedProtocolMessageType('TaskConfigSetUnitVariable', (_message.Message,), dict(
    DESCRIPTOR = _LINKCONFIG_TASKCONFIGSETUNITVARIABLE,
    __module__ = 'mcpserver_pb2'
    # @@protoc_insertion_point(class_scope:mcpserverpb.LinkConfig.TaskConfigSetUnitVariable)
    ))
  ,
  DESCRIPTOR = _LINKCONFIG,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.LinkConfig)
  ))
_sym_db.RegisterMessage(LinkConfig)
_sym_db.RegisterMessage(LinkConfig.StandardTasksConfig)
_sym_db.RegisterMessage(LinkConfig.MicroServiceChainChoice)
_sym_db.RegisterMessage(LinkConfig.MicroServiceChainChoice.Choice)
_sym_db.RegisterMessage(LinkConfig.MicroServiceChoiceReplacementDic)
_sym_db.RegisterMessage(LinkConfig.MicroServiceChoiceReplacementDic.Dict)
_sym_db.RegisterMessage(LinkConfig.MicroServiceChoiceReplacementDic.Dict.ItemsEntry)
_sym_db.RegisterMessage(LinkConfig.TaskConfigUnitVariableLinkPull)
_sym_db.RegisterMessage(LinkConfig.TaskConfigSetUnitVariable)

Link = _reflection.GeneratedProtocolMessageType('Link', (_message.Message,), dict(
  DESCRIPTOR = _LINK,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.Link)
  ))
_sym_db.RegisterMessage(Link)

Chain = _reflection.GeneratedProtocolMessageType('Chain', (_message.Message,), dict(
  DESCRIPTOR = _CHAIN,
  __module__ = 'mcpserver_pb2'
  # @@protoc_insertion_point(class_scope:mcpserverpb.Chain)
  ))
_sym_db.RegisterMessage(Chain)


_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT_ITEMSENTRY.has_options = True
_LINKCONFIG_MICROSERVICECHOICEREPLACEMENTDIC_DICT_ITEMSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
import grpc
from grpc.beta import implementations as beta_implementations
from grpc.beta import interfaces as beta_interfaces
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities


class MCPServerStub(object):
  """*
  Service

  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.ApproveJob = channel.unary_unary(
        '/mcpserverpb.MCPServer/ApproveJob',
        request_serializer=ApproveJobRequest.SerializeToString,
        response_deserializer=ApproveJobResponse.FromString,
        )
    self.ApproveTransfer = channel.unary_unary(
        '/mcpserverpb.MCPServer/ApproveTransfer',
        request_serializer=ApproveTransferRequest.SerializeToString,
        response_deserializer=ApproveTransferResponse.FromString,
        )
    self.JobList = channel.unary_unary(
        '/mcpserverpb.MCPServer/JobList',
        request_serializer=JobListRequest.SerializeToString,
        response_deserializer=JobListResponse.FromString,
        )
    self.LinkGet = channel.unary_unary(
        '/mcpserverpb.MCPServer/LinkGet',
        request_serializer=LinkGetRequest.SerializeToString,
        response_deserializer=LinkGetResponse.FromString,
        )
    self.ChainGet = channel.unary_unary(
        '/mcpserverpb.MCPServer/ChainGet',
        request_serializer=ChainGetRequest.SerializeToString,
        response_deserializer=ChainGetResponse.FromString,
        )
    self.ListMicroserviceChoiceDuplicates = channel.unary_unary(
        '/mcpserverpb.MCPServer/ListMicroserviceChoiceDuplicates',
        request_serializer=ListMicroserviceChoiceDuplicatesRequest.SerializeToString,
        response_deserializer=ListMicroserviceChoiceDuplicatesResponse.FromString,
        )


class MCPServerServicer(object):
  """*
  Service

  """

  def ApproveJob(self, request, context):
    """ApproveJob proceeds processing with a choice given by the user
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ApproveTransfer(self, request, context):
    """ApproveTransfer starts a transfer awaiting for approval
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def JobList(self, request, context):
    """JobList returns jobs awaiting for approval
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def LinkGet(self, request, context):
    """LinkGet gets detailed chain link information
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ChainGet(self, request, context):
    """ChainGet gets detailed chain information
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ListMicroserviceChoiceDuplicates(self, request, context):
    """TEMPORARY! Used in the Dashboard but it should be done differently in the future.
    The Dashboard should stop generating the configuration files.
    Related: https://github.com/artefactual/archivematica/pull/493
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MCPServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'ApproveJob': grpc.unary_unary_rpc_method_handler(
          servicer.ApproveJob,
          request_deserializer=ApproveJobRequest.FromString,
          response_serializer=ApproveJobResponse.SerializeToString,
      ),
      'ApproveTransfer': grpc.unary_unary_rpc_method_handler(
          servicer.ApproveTransfer,
          request_deserializer=ApproveTransferRequest.FromString,
          response_serializer=ApproveTransferResponse.SerializeToString,
      ),
      'JobList': grpc.unary_unary_rpc_method_handler(
          servicer.JobList,
          request_deserializer=JobListRequest.FromString,
          response_serializer=JobListResponse.SerializeToString,
      ),
      'LinkGet': grpc.unary_unary_rpc_method_handler(
          servicer.LinkGet,
          request_deserializer=LinkGetRequest.FromString,
          response_serializer=LinkGetResponse.SerializeToString,
      ),
      'ChainGet': grpc.unary_unary_rpc_method_handler(
          servicer.ChainGet,
          request_deserializer=ChainGetRequest.FromString,
          response_serializer=ChainGetResponse.SerializeToString,
      ),
      'ListMicroserviceChoiceDuplicates': grpc.unary_unary_rpc_method_handler(
          servicer.ListMicroserviceChoiceDuplicates,
          request_deserializer=ListMicroserviceChoiceDuplicatesRequest.FromString,
          response_serializer=ListMicroserviceChoiceDuplicatesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'mcpserverpb.MCPServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class BetaMCPServerServicer(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  """*
  Service

  """
  def ApproveJob(self, request, context):
    """ApproveJob proceeds processing with a choice given by the user
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ApproveTransfer(self, request, context):
    """ApproveTransfer starts a transfer awaiting for approval
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def JobList(self, request, context):
    """JobList returns jobs awaiting for approval
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def LinkGet(self, request, context):
    """LinkGet gets detailed chain link information
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ChainGet(self, request, context):
    """ChainGet gets detailed chain information
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
  def ListMicroserviceChoiceDuplicates(self, request, context):
    """TEMPORARY! Used in the Dashboard but it should be done differently in the future.
    The Dashboard should stop generating the configuration files.
    Related: https://github.com/artefactual/archivematica/pull/493
    """
    context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


class BetaMCPServerStub(object):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This class was generated
  only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
  """*
  Service

  """
  def ApproveJob(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """ApproveJob proceeds processing with a choice given by the user
    """
    raise NotImplementedError()
  ApproveJob.future = None
  def ApproveTransfer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """ApproveTransfer starts a transfer awaiting for approval
    """
    raise NotImplementedError()
  ApproveTransfer.future = None
  def JobList(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """JobList returns jobs awaiting for approval
    """
    raise NotImplementedError()
  JobList.future = None
  def LinkGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """LinkGet gets detailed chain link information
    """
    raise NotImplementedError()
  LinkGet.future = None
  def ChainGet(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """ChainGet gets detailed chain information
    """
    raise NotImplementedError()
  ChainGet.future = None
  def ListMicroserviceChoiceDuplicates(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
    """TEMPORARY! Used in the Dashboard but it should be done differently in the future.
    The Dashboard should stop generating the configuration files.
    Related: https://github.com/artefactual/archivematica/pull/493
    """
    raise NotImplementedError()
  ListMicroserviceChoiceDuplicates.future = None


def beta_create_MCPServer_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_deserializers = {
    ('mcpserverpb.MCPServer', 'ApproveJob'): ApproveJobRequest.FromString,
    ('mcpserverpb.MCPServer', 'ApproveTransfer'): ApproveTransferRequest.FromString,
    ('mcpserverpb.MCPServer', 'ChainGet'): ChainGetRequest.FromString,
    ('mcpserverpb.MCPServer', 'JobList'): JobListRequest.FromString,
    ('mcpserverpb.MCPServer', 'LinkGet'): LinkGetRequest.FromString,
    ('mcpserverpb.MCPServer', 'ListMicroserviceChoiceDuplicates'): ListMicroserviceChoiceDuplicatesRequest.FromString,
  }
  response_serializers = {
    ('mcpserverpb.MCPServer', 'ApproveJob'): ApproveJobResponse.SerializeToString,
    ('mcpserverpb.MCPServer', 'ApproveTransfer'): ApproveTransferResponse.SerializeToString,
    ('mcpserverpb.MCPServer', 'ChainGet'): ChainGetResponse.SerializeToString,
    ('mcpserverpb.MCPServer', 'JobList'): JobListResponse.SerializeToString,
    ('mcpserverpb.MCPServer', 'LinkGet'): LinkGetResponse.SerializeToString,
    ('mcpserverpb.MCPServer', 'ListMicroserviceChoiceDuplicates'): ListMicroserviceChoiceDuplicatesResponse.SerializeToString,
  }
  method_implementations = {
    ('mcpserverpb.MCPServer', 'ApproveJob'): face_utilities.unary_unary_inline(servicer.ApproveJob),
    ('mcpserverpb.MCPServer', 'ApproveTransfer'): face_utilities.unary_unary_inline(servicer.ApproveTransfer),
    ('mcpserverpb.MCPServer', 'ChainGet'): face_utilities.unary_unary_inline(servicer.ChainGet),
    ('mcpserverpb.MCPServer', 'JobList'): face_utilities.unary_unary_inline(servicer.JobList),
    ('mcpserverpb.MCPServer', 'LinkGet'): face_utilities.unary_unary_inline(servicer.LinkGet),
    ('mcpserverpb.MCPServer', 'ListMicroserviceChoiceDuplicates'): face_utilities.unary_unary_inline(servicer.ListMicroserviceChoiceDuplicates),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)


def beta_create_MCPServer_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  """The Beta API is deprecated for 0.15.0 and later.

  It is recommended to use the GA API (classes and functions in this
  file not marked beta) for all further purposes. This function was
  generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
  request_serializers = {
    ('mcpserverpb.MCPServer', 'ApproveJob'): ApproveJobRequest.SerializeToString,
    ('mcpserverpb.MCPServer', 'ApproveTransfer'): ApproveTransferRequest.SerializeToString,
    ('mcpserverpb.MCPServer', 'ChainGet'): ChainGetRequest.SerializeToString,
    ('mcpserverpb.MCPServer', 'JobList'): JobListRequest.SerializeToString,
    ('mcpserverpb.MCPServer', 'LinkGet'): LinkGetRequest.SerializeToString,
    ('mcpserverpb.MCPServer', 'ListMicroserviceChoiceDuplicates'): ListMicroserviceChoiceDuplicatesRequest.SerializeToString,
  }
  response_deserializers = {
    ('mcpserverpb.MCPServer', 'ApproveJob'): ApproveJobResponse.FromString,
    ('mcpserverpb.MCPServer', 'ApproveTransfer'): ApproveTransferResponse.FromString,
    ('mcpserverpb.MCPServer', 'ChainGet'): ChainGetResponse.FromString,
    ('mcpserverpb.MCPServer', 'JobList'): JobListResponse.FromString,
    ('mcpserverpb.MCPServer', 'LinkGet'): LinkGetResponse.FromString,
    ('mcpserverpb.MCPServer', 'ListMicroserviceChoiceDuplicates'): ListMicroserviceChoiceDuplicatesResponse.FromString,
  }
  cardinalities = {
    'ApproveJob': cardinality.Cardinality.UNARY_UNARY,
    'ApproveTransfer': cardinality.Cardinality.UNARY_UNARY,
    'ChainGet': cardinality.Cardinality.UNARY_UNARY,
    'JobList': cardinality.Cardinality.UNARY_UNARY,
    'LinkGet': cardinality.Cardinality.UNARY_UNARY,
    'ListMicroserviceChoiceDuplicates': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'mcpserverpb.MCPServer', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
